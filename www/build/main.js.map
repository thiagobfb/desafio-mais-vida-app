{"version":3,"sources":["../../src/providers/login/login.service.ts","../../src/providers/providers.ts","../../src/providers/auth/principal.service.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/entities/entity.module.ts","../../src/providers/auth/account.service.ts","../../src/providers/auth/auth-jwt.service.ts","../../src/pages/pages.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/pages/entities/entity.ts","../../src/providers/api/api.ts","../../src/providers/settings/settings.ts","../../src/providers/user/user.ts","../../src/app/app.component.ts","../../src/providers/auth/auth-interceptor.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\n//import { JhiLanguageService } from 'ng-jhipster';\n\nimport { Principal } from '../auth/principal.service';\nimport { AuthServerProvider } from '../auth/auth-jwt.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class LoginService {\n\n    constructor(\n        private principal: Principal,\n        private authServerProvider: AuthServerProvider,\n        private translate: TranslateService\n    ) {}\n\n    login(credentials, callback?) {\n        const cb = callback || function() {};\n\n        return new Promise((resolve, reject) => {\n            this.authServerProvider.login(credentials).subscribe((data) => {\n                this.principal.identity(true).then((account) => {\n                    // After the login the language will be changed to\n                    // the language selected by the user during his registration\n                    if (account !== null) {\n                        this.translate.use(account.langKey);\n                    }\n                    resolve(data);\n                });\n                return cb();\n            }, (err) => {\n                this.logout();\n                reject(err);\n                return cb(err);\n            });\n        });\n    }\n\n    loginWithToken(jwt, rememberMe) {\n        return this.authServerProvider.loginWithToken(jwt, rememberMe);\n    }\n\n    logout() {\n        this.authServerProvider.logout().subscribe();\n        this.principal.authenticate(null);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/login/login.service.ts","import { Api } from './api/api';\nimport { Settings } from './settings/settings';\nimport { User } from './user/user';\n\nexport {\n    Api,\n    Settings,\n    User\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/providers.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { AccountService } from './account.service';\n\n@Injectable()\nexport class Principal {\n    private userIdentity: any;\n    private authenticated = false;\n    private authenticationState = new Subject<any>();\n\n    constructor(\n        private account: AccountService\n    ) {}\n\n    authenticate(identity) {\n        this.userIdentity = identity;\n        this.authenticated = identity !== null;\n        this.authenticationState.next(this.userIdentity);\n    }\n\n    hasAnyAuthority(authorities: string[]): Promise<boolean> {\n        return Promise.resolve(this.hasAnyAuthorityDirect(authorities));\n    }\n\n    hasAnyAuthorityDirect(authorities: string[]): boolean {\n        if (!this.authenticated || !this.userIdentity || !this.userIdentity.authorities) {\n            return false;\n        }\n\n        for (let i = 0; i < authorities.length; i++) {\n            if (this.userIdentity.authorities.indexOf(authorities[i]) !== -1) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    hasAuthority(authority: string): Promise<boolean> {\n        if (!this.authenticated) {\n           return Promise.resolve(false);\n        }\n\n        return this.identity().then((id) => {\n            return Promise.resolve(id.authorities && id.authorities.indexOf(authority) !== -1);\n        }, () => {\n            return Promise.resolve(false);\n        });\n    }\n\n    identity(force?: boolean): Promise<any> {\n        if (force === true) {\n            this.userIdentity = undefined;\n        }\n\n        // check and see if we have retrieved the userIdentity data from the server.\n        // if we have, reuse it by immediately resolving\n        if (this.userIdentity) {\n            return Promise.resolve(this.userIdentity);\n        }\n\n        // retrieve the userIdentity data from the server, update the identity object, and then resolve.\n        return this.account.get().toPromise().then((account) => {\n            if (account) {\n                this.userIdentity = account;\n                this.authenticated = true;\n            } else {\n                this.userIdentity = null;\n                this.authenticated = false;\n            }\n            this.authenticationState.next(this.userIdentity);\n            return this.userIdentity;\n        }).catch((err) => {\n            this.userIdentity = null;\n            this.authenticated = false;\n            this.authenticationState.next(this.userIdentity);\n            return null;\n        });\n    }\n\n    isAuthenticated(): boolean {\n        return this.authenticated;\n    }\n\n    isIdentityResolved(): boolean {\n        return this.userIdentity !== undefined;\n    }\n\n    getAuthenticationState(): Observable<any> {\n        return this.authenticationState.asObservable();\n    }\n\n    getImageUrl(): String {\n        return this.isIdentityResolved() ? this.userIdentity.imageUrl : null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/auth/principal.service.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 182;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 182\n// module chunks = 11","var map = {\n\t\"../pages/entities/entity.module\": [\n\t\t250\n\t],\n\t\"../pages/entities/medico-my-suffix/medico-my-suffix-detail.module\": [\n\t\t718,\n\t\t0\n\t],\n\t\"../pages/entities/medico-my-suffix/medico-my-suffix-dialog.module\": [\n\t\t719,\n\t\t2\n\t],\n\t\"../pages/entities/medico-my-suffix/medico-my-suffix.module\": [\n\t\t720,\n\t\t1\n\t],\n\t\"../pages/home/home.module\": [\n\t\t721,\n\t\t10\n\t],\n\t\"../pages/login/login.module\": [\n\t\t722,\n\t\t9\n\t],\n\t\"../pages/menu/menu.module\": [\n\t\t723,\n\t\t8\n\t],\n\t\"../pages/settings/settings.module\": [\n\t\t724,\n\t\t7\n\t],\n\t\"../pages/signup/signup.module\": [\n\t\t725,\n\t\t6\n\t],\n\t\"../pages/tabs/tabs.module\": [\n\t\t726,\n\t\t5\n\t],\n\t\"../pages/tutorial/tutorial.module\": [\n\t\t727,\n\t\t4\n\t],\n\t\"../pages/welcome/welcome.module\": [\n\t\t728,\n\t\t3\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 249;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 249\n// module chunks = 11","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { EntityPage } from './entity';\n\n@NgModule({\n  declarations: [\n    EntityPage\n    /* jhipster-needle-add-entity-module - JHipster will add entity modules here */\n  ],\n  imports: [\n    IonicPageModule.forChild(EntityPage),\n    TranslateModule.forChild()\n  ],\n  exports: [EntityPage],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class EntityPageModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/entities/entity.module.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { Api } from '../api/api';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class AccountService  {\n    constructor(private http: HttpClient) { }\n\n    get(): Observable<any> {\n        return this.http.get(Api.API_URL + '/account');\n    }\n\n    save(account: any): Observable<Object> {\n        return this.http.post(Api.API_URL + '/account', account);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/auth/account.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\nimport { Api } from '../api/api';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class AuthServerProvider {\n\n  constructor(private http: HttpClient,\n              private $localStorage: LocalStorageService,\n              private $sessionStorage: SessionStorageService) {\n  }\n\n  getToken() {\n    return this.$localStorage.retrieve('authenticationToken') || this.$sessionStorage.retrieve('authenticationToken');\n  }\n\n  login(credentials): Observable<any> {\n\n    const data = {\n      username: credentials.username,\n      password: credentials.password,\n      rememberMe: credentials.rememberMe\n    };\n\n    return this.http.post(Api.API_URL + '/authenticate', data).map((response: any) => {\n      const jwt = response['id_token'];\n      if (jwt) {\n        this.storeAuthenticationToken(jwt, credentials.rememberMe);\n        return jwt;\n      }\n    });\n  }\n\n  loginWithToken(jwt, rememberMe) {\n    if (jwt) {\n      this.storeAuthenticationToken(jwt, rememberMe);\n      return Promise.resolve(jwt);\n    } else {\n      return Promise.reject('auth-jwt-service Promise reject'); // Put appropriate error message here\n    }\n  }\n\n  storeAuthenticationToken(jwt, rememberMe) {\n    if (rememberMe) {\n      this.$localStorage.store('authenticationToken', jwt);\n    } else {\n      this.$sessionStorage.store('authenticationToken', jwt);\n    }\n  }\n\n  logout(): Observable<any> {\n    return new Observable((observer) => {\n      this.$localStorage.clear('authenticationToken');\n      this.$sessionStorage.clear('authenticationToken');\n      observer.complete();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/auth/auth-jwt.service.ts","// The page the user lands on after opening the app and without a session\nexport const FirstRunPage = 'WelcomePage';\n\n// The main page the user will see as they use the app over a long period of time.\n// Change this if not using tabs\nexport const MainPage = 'TabsPage';\n\n// The initial root pages for our tabs (remove if not using tabs)\nexport const Tab1Root = 'HomePage';\nexport const Tab2Root = 'EntityPage';\nexport const Tab3Root = 'SettingsPage';\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pages.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Camera } from '@ionic-native/camera';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { IonicStorageModule, Storage } from '@ionic/storage';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { Api, Settings, User } from '../providers/providers';\nimport { MyApp } from './app.component';\nimport { LoginService } from '../providers/login/login.service';\nimport { Principal } from '../providers/auth/principal.service';\nimport { AccountService } from '../providers/auth/account.service';\nimport { AuthServerProvider } from '../providers/auth/auth-jwt.service';\nimport { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\nimport { AuthInterceptor } from '../providers/auth/auth-interceptor';\nimport { EntityPageModule } from '../pages/entities/entity.module';\n\n// The translate loader needs to know where to load i18n files\n// in Ionic's static asset pipeline.\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\nexport function provideSettings(storage: Storage) {\n  /**\n   * The Settings provider takes a set of default settings for your app.\n   *\n   * You can add new settings options at any time. Once the settings are saved,\n   * these values will not overwrite the saved values (this can be done manually if desired).\n   */\n  return new Settings(storage, {\n    option1: true,\n    option2: 'Ionitron J. Framework',\n    option3: '3',\n    option4: 'Hello'\n  });\n}\n\n@NgModule({\n  declarations: [\n    MyApp\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    }),\n    IonicModule.forRoot(MyApp),\n    IonicStorageModule.forRoot(),\n    EntityPageModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp\n  ],\n  providers: [\n    Api,\n    User,\n    LoginService,\n    Principal,\n    AccountService,\n    AuthServerProvider,\n    LocalStorageService,\n    SessionStorageService,\n    Camera,\n    SplashScreen,\n    StatusBar,\n    { provide: Settings, useFactory: provideSettings, deps: [Storage] },\n    // Keep this to enable Ionic's runtime error handling during development\n    { provide: ErrorHandler, useClass: IonicErrorHandler },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n  ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController } from 'ionic-angular';\n\n@IonicPage()\n@Component({\n  selector: 'page-entity',\n  templateUrl: 'entity.html'\n})\nexport class EntityPage {\n\n  entities: Array<any> = [\n      {name: 'MedicoMySuffix', component: 'MedicoMySuffixPage'},\n      /* jhipster-needle-add-entity-page - JHipster will add entity pages here */\n  ];\n\n  constructor(public nav: NavController) { }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.push(page.component);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/entities/entity.ts","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n/**\n * Api is a generic REST Api handler. Set your API url first.\n */\n@Injectable()\nexport class Api {\n  public static API_URL: string = 'http://localhost:8080/api';\n\n  constructor(public http: HttpClient) {\n  }\n\n  get(endpoint: string, params?: any, reqOpts?: any) {\n    if (!reqOpts) {\n      reqOpts = {\n        params: new HttpParams()\n      };\n    }\n\n    // Support easy query params for GET requests\n    if (params) {\n      reqOpts.params = new HttpParams();\n      for (let k in params) {\n        reqOpts.params.set(k, params[k]);\n      }\n    }\n\n    return this.http.get(Api.API_URL + '/' + endpoint, reqOpts);\n  }\n\n  post(endpoint: string, body: any, reqOpts?: any) {\n    return this.http.post(Api.API_URL + '/' + endpoint, body, reqOpts);\n  }\n\n  put(endpoint: string, body: any, reqOpts?: any) {\n    return this.http.put(Api.API_URL + '/' + endpoint, body, reqOpts);\n  }\n\n  delete(endpoint: string, reqOpts?: any) {\n    return this.http.delete(Api.API_URL + '/' + endpoint, reqOpts);\n  }\n\n  patch(endpoint: string, body: any, reqOpts?: any) {\n    return this.http.put(Api.API_URL + '/' + endpoint, body, reqOpts);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/api/api.ts","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n/**\n * A simple settings/config class for storing key/value pairs with persistence.\n */\n@Injectable()\nexport class Settings {\n  private SETTINGS_KEY: string = '_settings';\n\n  settings: any;\n\n  _defaults: any;\n  _readyPromise: Promise<any>;\n\n  constructor(public storage: Storage, defaults: any) {\n    this._defaults = defaults;\n  }\n\n  load() {\n    return this.storage.get(this.SETTINGS_KEY).then((value) => {\n      if (value) {\n        this.settings = value;\n        return this._mergeDefaults(this._defaults);\n      } else {\n        return this.setAll(this._defaults).then((val) => {\n          this.settings = val;\n        })\n      }\n    });\n  }\n\n  _mergeDefaults(defaults: any) {\n    for (let k in defaults) {\n      if (!(k in this.settings)) {\n        this.settings[k] = defaults[k];\n      }\n    }\n    return this.setAll(this.settings);\n  }\n\n  merge(settings: any) {\n    for (let k in settings) {\n      this.settings[k] = settings[k];\n    }\n    return this.save();\n  }\n\n  setValue(key: string, value: any) {\n    this.settings[key] = value;\n    return this.storage.set(this.SETTINGS_KEY, this.settings);\n  }\n\n  setAll(value: any) {\n    return this.storage.set(this.SETTINGS_KEY, value);\n  }\n\n  getValue(key: string) {\n    return this.storage.get(this.SETTINGS_KEY)\n      .then(settings => {\n        return settings[key];\n      });\n  }\n\n  save() {\n    return this.setAll(this.settings);\n  }\n\n  get allSettings() {\n    return this.settings;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/settings/settings.ts","import 'rxjs/add/operator/toPromise';\n\nimport { Injectable } from '@angular/core';\n\nimport { Api } from '../api/api';\nimport { LoginService } from '../login/login.service';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n * Most apps have the concept of a User. This is a simple provider\n * with stubs for login/signup/etc.\n *\n * This User provider makes calls to our API at the `login` and `signup` endpoints.\n *\n * By default, it expects `login` and `signup` to return a JSON object of the shape:\n *\n * ```json\n * {\n *   status: 'success',\n *   user: {\n *     // User fields your app needs, like \"id\", \"name\", \"email\", etc.\n *   }\n * }Ø\n * ```\n *\n * If the `status` field is not `success`, then an error is detected and returned.\n */\n@Injectable()\nexport class User {\n  _user: any;\n\n  constructor(public api: Api, public loginService: LoginService) { }\n\n  /**\n   * Send a POST request to our login endpoint with the data\n   * the user entered on the form.\n   */\n  login(accountInfo: any) {\n    this.loginService.login(accountInfo).then((res) => {\n      this._loggedIn(res);\n      return Observable.of(res);\n    }).catch((err) => {\n      console.error('ERROR', err);\n      return Observable.throw(err);\n    });\n  }\n\n  findAll(): Observable<any> {\n    return this.api.get('users');\n  }\n\n  /**\n   * Send a POST request to our signup endpoint with the data\n   * the user entered on the form.\n   */\n  signup(accountInfo: any) {\n    return this.api.post('register', accountInfo).share();\n  }\n\n  /**\n   * Log the user out, which forgets the session\n   */\n  logout() {\n    this.loginService.logout();\n    this._user = null;\n  }\n\n  /**\n   * Process a login/signup response to store user data\n   */\n  _loggedIn(resp) {\n    this._user = resp.user;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user/user.ts","import { Component, ViewChild } from '@angular/core';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Config, Nav, Platform } from 'ionic-angular';\n\nimport { MainPage } from '../pages/pages';\nimport { Settings } from '../providers/providers';\n\n@Component({\n  template: `<ion-menu [content]=\"content\">\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>Pages</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-list>\n        <button menuClose ion-item *ngFor=\"let p of pages\" (click)=\"openPage(p)\">\n          {{p.title}}\n        </button>\n      </ion-list>\n    </ion-content>\n\n  </ion-menu>\n  <ion-nav #content [root]=\"rootPage\"></ion-nav>`\n})\nexport class MyApp {\n  rootPage = MainPage;\n\n  @ViewChild(Nav) nav: Nav;\n\n  pages: any[] = [\n    { title: 'Welcome', component: 'WelcomePage' },\n    { title: 'Tabs', component: 'TabsPage' },\n    { title: 'Login', component: 'LoginPage' },\n    { title: 'Signup', component: 'SignupPage' },\n    { title: 'Menu', component: 'MenuPage' },\n    { title: 'Settings', component: 'SettingsPage' },\n    { title: 'Entities', component: 'EntityPage' }\n  ];\n\n  constructor(private translate: TranslateService, platform: Platform, settings: Settings, private config: Config,\n              private statusBar: StatusBar, private splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n    this.initTranslate();\n  }\n\n  initTranslate() {\n    // Set the default language for translation strings, and the current language.\n    this.translate.setDefaultLang('en');\n\n    if (this.translate.getBrowserLang() !== undefined) {\n      console.log(this.translate.getBrowserLang());\n      this.translate.use(this.translate.getBrowserLang());\n    } else {\n      this.translate.use('en'); // Set your language here\n    }\n\n    this.translate.get(['BACK_BUTTON_TEXT']).subscribe(values => {\n      this.config.set('ios', 'backButtonText', values.BACK_BUTTON_TEXT);\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HttpErrorResponse, HttpResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private localStorage: LocalStorageService, private sessionStorage: SessionStorageService) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = this.localStorage.retrieve('authenticationToken') || this.sessionStorage.retrieve('authenticationToken');\n    if (!!token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n\n    return next.handle(request).do((event: any) => {\n      if (event instanceof HttpResponse) {\n        return event;\n      }\n    }).catch(error => {\n      if (error instanceof HttpErrorResponse) {\n        if (error.status === 401) {\n          return Observable.of(error);\n        }\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/auth/auth-interceptor.ts"],"sourceRoot":""}